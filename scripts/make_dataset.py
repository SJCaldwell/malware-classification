"""
Provide a directory, identified as full of "malicious" files or "benign" files:
1. Confirm each file is a binary
2. Hexdump it into regular text
3. get a content hash
4. store a .txt file in `data`
5. Store a .csv manifest featuring the filename, content hash, and its classification
6.  
"""
import os


def hexdump_file(bin_file_path, data_folder):
    """Hexdump binary file, writing it to a data folder
    Args:
        bin_file_path (str): Path to binary
        data_folder (str): Path to filder to write the file to
    """
    txt_bin_path = data_folder + "/" + bin_file_path.split("/")[-1] + ".txt"
    command = f'hexdump -e \'16/1 "%02x " "\n"\' {bin_file_path} > {txt_bin_path}'
    os.system(command)
    return txt_bin_path


def clean_file(hex_file):
    """Clean hex file. Write all to one line, and remove * and replace with the previous line.
    Args:
        hex_file (str): A file made of new_lines, 16 characters long
    """
    file_contents = ""
    LINE_LENGTH = 48  # length of each hexdump line
    with open(hex_file, "r") as a_file:
        for line in a_file:
            stripped_line = line.strip()
            if "*" in stripped_line:
                file_contents += file_contents[-LINE_LENGTH:] + " "
            else:
                file_contents += stripped_line + " "
    # you added a trailing blank space at the end. remove it.
    with open(hex_file, "w") as a_file:
        a_file.write(file_contents.rstrip())


if __name__ == "__main__":
    txt_bin_path = hexdump_file("../mal_bin/001", "../data/")
    clean_file(hex_file=txt_bin_path)
